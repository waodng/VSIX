<?xml version="1.0"?>
<!--Copyright (c) Microsoft Corporation.  All rights reserved.-->
<!--Licensed under the MIT License.  See License.txt in the project root for license information.-->
<ResourceDictionary x:Class="AspNetMvcScaffolder.UserInterface.StyleResources" x:ClassModifier="internal" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase" xmlns:res="clr-namespace:AspNetMvcScaffolder">
    <!-- Default Label style -->
    <Style x:Key="{x:Type Label}" TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type Label}}">
        <Setter Property="Margin" Value="0 5 0 5" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value=".56" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- Layout Label style -->
    <Style x:Key="LayoutLabel" TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type Label}}">
        <Setter Property="Margin" Value="0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value=".56" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- Default ComboBox style  -->
    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
        <Style.Setters>
            <Setter Property="Margin" Value="0 5 0 5" />
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <!-- When a combobox is disabled, we don't want to show the contents in the combobox. Hence setting the foreground color same as background color -->
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- Default TextBox style -->
    <Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Style.Setters>
            <Setter Property="Margin" Value="0 5 0 5" />
            <Setter Property="Padding" Value="2" />
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value=".56" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- Small Button style -->
    <Style x:Key="SmallButton" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Style.Setters>
            <Setter Property="Margin" Value="10 5 0 5" />
            <Setter Property="MinWidth" Value="27" />
        </Style.Setters>
    </Style>
    <!-- Default CheckBox style  -->
    <Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}">
        <Setter Property="Margin" Value="0 5 0 5" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value=".56" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- Bottom CheckBox style  -->
    <Style x:Key="BottomCheckBox" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}">
        <Setter Property="Margin" Value="0 5 0 0" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value=".56" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- Add Button Style -->
    <Style x:Key="AddButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Style.Setters>
            <Setter Property="IsDefault" Value="True" />
            <Setter Property="MinWidth" Value="75" />
            <Setter Property="Margin" Value="0,0,0,6" />
            <Setter Property="MinHeight" Value="27" />
        </Style.Setters>
    </Style>
    <!-- Cancel Button Style -->
    <Style x:Key="CancelButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Style.Setters>
            <Setter Property="MinWidth" Value="75" />
            <Setter Property="IsCancel" Value="True" />
            <Setter Property="Margin" Value="12,0,0,6" />
            <Setter Property="MinHeight" Value="27" />
        </Style.Setters>
    </Style>
    <!-- Stack Panel Margin -->
    <Style x:Key="PanelStyle" TargetType="{x:Type Panel}">
        <Style.Setters>
            <Setter Property="Margin" Value="12" />
        </Style.Setters>
    </Style>
    <!-- User Control Margin -->
    <Style x:Key="UserControlStyle" TargetType="{x:Type UserControl}" BasedOn="{StaticResource {x:Type UserControl}}">
        <Style.Setters>
            <Setter Property="Margin" Value="12" />
        </Style.Setters>
    </Style>
    <!-- Add Cancel Stack Panel Style -->
    <Style x:Key="AddCancelStackPanel" TargetType="{x:Type StackPanel}">
        <Style.Setters>
            <Setter Property="Margin" Value="0 0 12 0" />
            <Setter Property="Orientation" Value="Horizontal" />
            <Setter Property="HorizontalAlignment" Value="Right" />
        </Style.Setters>
    </Style>
    <!-- Controller Name background color -->
    <Style x:Key="StackPanelBackgroundStyle" TargetType="{x:Type StackPanel}">
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="False" />
                    <Condition Binding="{Binding Path=IsModelClassSupported}" Value="true" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <!-- This style is used by the view dialog to disable the stack panel containing the model class combobox and datacontext combobox -->
    <Style x:Key="StackPanelModelEnabled" TargetType="{x:Type StackPanel}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsViewWithModelSelected}" Value="false">
                <Setter Property="IsEnabled" Value="False"></Setter>
                <Setter Property="ToolTip" Value="{x:Static res:Resources.ViewWithoutModelTooltip}"></Setter>
                <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="DataGridColumnHeader">
        <Setter Property="Foreground" Value="#323433" />
        <Setter Property="Height" Value="30"/>
    </Style>
    <Style  TargetType="DataGridCell">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>