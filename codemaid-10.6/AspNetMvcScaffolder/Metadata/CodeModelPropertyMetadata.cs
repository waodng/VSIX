using EnvDTE;
using EnvDTE80;
using Microsoft.AspNet.Scaffolding;
using Microsoft.AspNet.Scaffolding.Core.Metadata;
using System;

namespace AspNetMvcScaffolder.Metadata
{
    [Serializable]
    public sealed class CodeModelPropertyMetadata : PropertyMetadata
    {
        public CodeModelPropertyMetadata(CodeProperty property)
        {
            if (property == null)
            {
                throw new ArgumentNullException("property");
            }

            PropertyName = property.Name;
            TypeName = property.Type.AsFullName;
            ShortTypeName = property.Type.AsString;
            IsPrimaryKey = IsPropertyPrimaryKey(property);
            IsAutoGenerated = IsPrimaryKey;
            IsReadOnly = !property.HasPublicSetter();
            Scaffold = IsScaffoldColumn(property);
        }

        private static bool IsPropertyPrimaryKey(CodeProperty propertyType)
        {
            if (String.Equals(propertyType.Name, "id", StringComparison.OrdinalIgnoreCase))
            {
                return true;
            }

            if (String.Equals(propertyType.Name, propertyType.Parent.Name + "id", StringComparison.OrdinalIgnoreCase))
            {
                return true;
            }

            foreach (CodeAttribute attribute in propertyType.Attributes)
            {
                if (String.Equals(attribute.FullName, TypeNames.KeyAttributeTypeName, StringComparison.Ordinal))
                {
                    return true;
                }

                if (String.Equals(attribute.FullName, TypeNames.EdmScalarPropertyAttributeTypeName, StringComparison.Ordinal))
                {
                    if (IsPropertyValuePresent(attribute: attribute, name: "EntityKeyProperty", value: "true"))
                    {
                        return true;
                    }
                }

                if (String.Equals(attribute.FullName, TypeNames.ColumnAttributeTypeName, StringComparison.Ordinal))
                {
                    if (IsPropertyValuePresent(attribute: attribute, name: "IsPrimaryKey", value: "true"))
                    {
                        return true;
                    }
                }
            }

            return false;
        }

        private static bool IsPropertyValuePresent(CodeAttribute attribute, string name, string value)
        {
            foreach (CodeAttributeArgument property in attribute.Children)
            {
                if (String.Equals(property.Name, name, StringComparison.Ordinal) &&
                    String.Equals(property.Value, value, StringComparison.Ordinal))
                {
                    return true;
                }
            }

            return false;
        }

        private static bool IsScaffoldColumn(CodeProperty propertyType)
        {
            foreach (CodeAttribute attribute in propertyType.Attributes)
            {
                if (String.Equals(attribute.FullName, TypeNames.ScaffoldColumnAttributeTypeName, StringComparison.Ordinal))
                {
                    return IsPropertyValuePresent(attribute: attribute, name: String.Empty, value: "true");
                }
            }
            return true;
        }
    }
}
